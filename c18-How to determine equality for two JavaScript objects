//How to determine equality for two JavaScript objects?.



const a= {
  "_id": {
    "$oid": "60f44ca55bfe5b01d442acc7"
  },
  "collection_name": "Department",
  "policy_id": "policy 1",
  "description": "....",
  "rule_combining": "permit-overrides",
  "is_attribute_resource_required": false,
  "action": "read",
  "target": {
    "function_name": "BooleanEqual",
    "parameters": [
      {
        "value": "active",
        "resource_id": "Subject"
      },
      {
        "value": "true"
      }
    ]
  },
  "rules": [
    {
      "_id": "rule 1",
      "effect": "Permit",
      "condition": {
        "function_name": "Or",
        "parameters": [
          {
            "function_name": "StringEqual",
            "parameters": [
              {
                "value": "role",
                "resource_id": "Subject"
              },
              {
                "value": "tinh"
              }
            ]
          },
          {
            "function_name": "StringEqual",
            "parameters": [
              {
                "value": "role",
                "resource_id": "Subject"
              },
              {
                "value": "doctor"
              }
            ]
          }
        ]
      }
    }
  ]
};
const b = {
  "_id": {
    "$oid": "60f44ca55bfe5b01d442acc7"
  },
  "collection_name": "Department",
  "policy_id": "policy 1",
  "description": "....",
  "rule_combining": "permit-overrides",
  "is_attribute_resource_required": false,
  "action": "read",
  "target": {
    "function_name": "BooleanEqual",
    "parameters": [
      {
        "value": "active",
        "resource_id": "Subject"
      },
      {
        "value": "true"
      }
    ]
  },
  "rules": [
    {
      "_id": "rule 1",
      "effect": "Permit",
      "condition": {
        "function_name": "Or",
        "parameters": [
          {
            "function_name": "StringEqual",
            "parameters": [
              {
                "value": "role",
                "resource_id": "Subject"
              },
              {
                "value": "tinh"
              }
            ]
          },
          {
            "function_name": "StringEqual",
            "parameters": [
              {
                "value": "role",
                "resource_id": "Subject"
              },
              {
                "value": "doctor1"
              }
            ]
          }
        ]
      }
    }
  ]
};

function object_equals( x, y ) {
  if ( x === y ) return true;
    // if both x and y are null or undefined and exactly the same

  if ( ! ( x instanceof Object ) || ! ( y instanceof Object ) ) return false;
    // if they are not strictly equal, they both need to be Objects

  if ( x.constructor !== y.constructor ) return false;
    // they must have the exact same prototype chain, the closest we can do is
    // test there constructor.

  for ( var p in x ) {
    if ( ! x.hasOwnProperty( p ) ) continue;
      // other properties were tested using x.constructor === y.constructor

    if ( ! y.hasOwnProperty( p ) ) return false;
      // allows to compare x[ p ] and y[ p ] when set to undefined

    if ( x[ p ] === y[ p ] ) continue;
      // if they have the same strict value or identity then they are equal

    if ( typeof( x[ p ] ) !== "object" ) return false;
      // Numbers, Strings, Functions, Booleans must be strictly equal

    if ( ! object_equals( x[ p ],  y[ p ] ) ) return false;
      // Objects and Arrays must be tested recursively
  }

  for ( p in y )
    if ( y.hasOwnProperty( p ) && ! x.hasOwnProperty( p ) )
      return false;
        // allows x[ p ] to be set to undefined

  return true;
}

console.log(object_equals(a,b));

